/**
 * 分布式对象
 * 分布式编程思想：客户机产生一个请求，然后将这个请求通过网络发送到服务器。服务器处理这个请求，并发送回一个针对该客户端的相应，供客户端金鑫分析。
 * PS：请求和响应数据的协议允许传递任意对象，传统的Web应用程序只限于对请求使用HTTP协议，对相应使用HTML（不是这样了）
 * 代理(Proxy):将客户端（广义）从数据发送到网络或者解析相应之类的问题中解放出来。它是位于虚拟机中的一个【对象】，它对于客户端的程序来说，看起来
 * 就像是要访问的远程对象一样。客户端调用此代理时，只需要进行常规的方法调用，客户端代理负责使用网络协议与服务器进行联系。服务端亦然如此，通信的双方
 * 是通过彼此的代理进行直接对话。
 * 常用的代理：
 * 1）CORBA，通用对象请求代理架构，支持【任何编程语言】编写的对象之间的方法调用。它是使用二进制Internet Inter-ORB（IIOP）协议来实现对
 * 象间的通信。
 * 2）Web服务架构是一个协议集，它有时统一描述为WS-*。它也是独立于编程语言的，不过它使用基于XML的通信格式。用于传输对象的格式则是简单对象访问协
 * 议（SOAP）
 * 3）RMI，java的远程方法调用技术，支持Java的分布式对象之间的方法调用。
 * 说明：CORBA和SOAP都是完全独立于语言的。如果相互通信的程序都是由Java实现的，那么，CORBA与WS-*的通用性与复杂性就统统都是不需要的，SUN
 * 开发了简单的远程方法调用机制，专门针对Java应用程序间的通信。
 * 
 * 分布式计算的关键是远程方法调用。在一台机器（场景下为客户端）上的某些代码希望调用在另一台机器（场景下为远程对象）上的某个对象的一个方法。要实现这
 * 一点，方法的参数必须以某种方式传递到另一台机器上，而服务器必须得到通知，去定位远程对象并执行要调用的方法，并且必须将返回值传递回去。
 * 
 * 远程方法调用骨架
 * 客户端逻辑---代理存根---参数编组---接收者---服务器方法---编码返回值或异常---返回值或抛出异常
 * 存根（stub）：位于客户端机器上，知道如何通过网络与服务器联系。存根会将远程方法所需的参数打包成一组字节。
 * 参数编组（parameter marshalling）：对参数编码的过程，参数编组的目的是将参数转换成适合在虚拟机之间进行传递的格式。
 * PS，在RMI协议中，对象是使用序列化机制进行编码的，在SOAP协议中，对象象被编码为XML。
 * 总结：
 * 存根方法构造了一个信息块，由如下几个部分组成：
 * 1）被使用的远程【对象】的标识符。
 * 2）被调用的【方法】的描述。
 * 3）编组后的【参数】。
 * 服务器接收器对象动作：
 * 1）定位要调用的远程对象。
 * 2）调用所需的方法，并传递客户端提供的参数。
 * 3）捕获返回值或该调用产生的异常。
 * 4）将返回值编组，打包送回给客户端存根。
 */
package com.zyx.distributed.object;