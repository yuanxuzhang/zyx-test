/**
 * 分布式对象
 * 分布式编程思想：客户机产生一个请求，然后将这个请求通过网络发送到服务器。服务器处理这个请求，并发送回一个针对该客户端的相应，供客户端金鑫分析。
 * PS：请求和响应数据的协议允许传递任意对象，传统的Web应用程序只限于对请求使用HTTP协议，对相应使用HTML（不是这样了）
 * 代理(Proxy):将客户端（广义）从数据发送到网络或者解析相应之类的问题中解放出来。它是位于虚拟机中的一个【对象】，它对于客户端的程序来说，看起来
 * 就像是要访问的远程对象一样。客户端调用此代理时，只需要进行常规的方法调用，客户端代理负责使用网络协议与服务器进行联系。服务端亦然如此，通信的双方
 * 是通过彼此的代理进行直接对话。
 * 常用的代理：
 * 1）CORBA，通用对象请求代理架构，支持【任何编程语言】编写的对象之间的方法调用。它是使用二进制Internet Inter-ORB（IIOP）协议来实现对
 * 象间的通信。
 * 2）Web服务架构是一个协议集，它有时统一描述为WS-*。它也是独立于编程语言的，不过它使用基于XML的通信格式。用于传输对象的格式则是简单对象访问协
 * 议（SOAP）
 * 3）RMI，java的远程方法调用技术，支持Java的分布式对象之间的方法调用。
 * 说明：CORBA和SOAP都是完全独立于语言的。如果相互通信的程序都是由Java实现的，那么，CORBA与WS-*的通用性与复杂性就统统都是不需要的，SUN
 * 开发了简单的远程方法调用机制，专门针对Java应用程序间的通信。
 */
package com.zyx.distributed.object;