/**
 * JDBC 
 * 设计思想：     
 * *************************程序-------驱动管理器------驱动管理器------实际数据库*******************************
 * 根据API编写的程序都可以与驱动管理器进行通信，而驱动管理器则通过驱动程序与实际的数据库通信。
 * 三点：
 * 1）一套“纯”JavaAPI
 * 2）一个驱动管理器
 * 3）一套简单机制，以使的第三方驱动程序可以向驱动管理器注册
 * 驱动器工作原理：
 * 一种是：使用一种与具体数据库无关的协议将数据库请求发给服务器构件，然后该构件再将数据库请求翻译成数据库相关的协议，简化部署，平台相关代码只位于服务器端。
 * 一种是：将JDBC请求直接翻译成数据库相关的协议。
 * 优点：
 * 通过使用标准的SQL语句，甚至是专门的SQL扩展，程序员就可以利用Java语言开发数据库的应用，同时还依旧遵循Java语言的相关约定。
 * 数据库供应商和数据库工具开发商可以提供底层的驱动程序。因此，他们可以优化各自数据库产品的驱动程序。
 * 
 * JDBC配置
 * 1）URL：
 * jdbc：subprotocal：other stuff
 * subprotocal用于选择连接数据库的具体驱动程序,驱动器管理器（DriverManager）遍历所有注册过的驱动器，以便找到一个能够使用数据库URL中指定的子协
 * 议的驱动程序。
 * other stuff参数的格式随所使用的subprotocal不同而不同。
 * 2）驱动程序文件
 * 3）注册驱动器类
 * 一种方式是在Java程序中加载驱动器类   Class.forname()
 * 一种方式是设置jdbc.driver属性      java Djdbc.driver="XXX.XXXX.XXX" 
 * 
 * 
 * 
 * 
 */
package com.zyx.jdbc;